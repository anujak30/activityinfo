package org.activityinfo.server.geo;

import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.nio.channels.Channels;

import javax.servlet.http.HttpServletResponse;

import com.google.appengine.api.files.AppEngineFile;
import com.google.appengine.api.files.FileReadChannel;
import com.google.appengine.api.files.FileService;
import com.google.appengine.api.files.FileServiceFactory;
import com.google.appengine.api.files.LockException;
import com.google.common.io.ByteStreams;
import com.google.inject.Singleton;

/**
 * Provides administrative unit geometry from the {@code aigeo} bucket in 
 * Google Cloud Storage. 
 * 
 * <p>The WKB files can are in the format generated by ActivityInfo's
 * geotools.
 */
@Singleton
public class GcsGeometryStorage implements GeometryStorage {

	private FileService fileService = FileServiceFactory.getFileService();

	@Override
	public InputStream openWkb(int adminLevelId) throws IOException {
		FileReadChannel readChannel = openChannel(adminLevelId, ".wkb");
		return Channels.newInputStream(readChannel);
	}

	@Override
	public void serveJson(int adminLevelId, boolean gzip, HttpServletResponse response) throws IOException {

		FileReadChannel readChannel = openChannel(adminLevelId, gzip ? ".json.gz" : ".json");
		InputStream in = Channels.newInputStream(readChannel);
		byte[] bytes = ByteStreams.toByteArray(in);
		readChannel.close();
		
		response.setContentType("application/json");
		if(gzip) {
			response.setHeader("Content-Encoding", "gzip");
		}
		response.setContentLength(bytes.length);
		response.getOutputStream().write(bytes);
	}
	
	private FileReadChannel openChannel(int adminLevelId, String suffix)
			throws FileNotFoundException, LockException, IOException {
		boolean lockForRead = false;
		String filename = "/gs/aigeo/" + adminLevelId + suffix;
		AppEngineFile readableFile = new AppEngineFile(filename);
		return fileService.openReadChannel(readableFile, lockForRead);
	}
}
